// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { APIResource } from "../../resource.mjs";
import * as PageAPI from "./page.mjs";
import * as RulesAPI from "./rules.mjs";
import * as SettingsAPI from "./settings.mjs";
import * as StatusesAPI from "./statuses.mjs";
import * as EventsAPI from "./events/events.mjs";
import { SinglePage } from "../../pagination.mjs";
export class WaitingRooms extends APIResource {
    constructor() {
        super(...arguments);
        this.page = new PageAPI.Page(this._client);
        this.events = new EventsAPI.Events(this._client);
        this.rules = new RulesAPI.Rules(this._client);
        this.statuses = new StatusesAPI.Statuses(this._client);
        this.settings = new SettingsAPI.Settings(this._client);
    }
    /**
     * Creates a new waiting room.
     */
    create(params, options) {
        const { zone_id, ...body } = params;
        return this._client.post(`/zones/${zone_id}/waiting_rooms`, { body, ...options })._thenUnwrap((obj) => obj.result);
    }
    /**
     * Updates a configured waiting room.
     */
    update(waitingRoomId, params, options) {
        const { zone_id, ...body } = params;
        return this._client.put(`/zones/${zone_id}/waiting_rooms/${waitingRoomId}`, {
            body,
            ...options,
        })._thenUnwrap((obj) => obj.result);
    }
    /**
     * Lists waiting rooms.
     */
    list(params, options) {
        const { zone_id, ...query } = params;
        return this._client.getAPIList(`/zones/${zone_id}/waiting_rooms`, WaitingRoomsSinglePage, {
            query,
            ...options,
        });
    }
    /**
     * Deletes a waiting room.
     */
    delete(waitingRoomId, params, options) {
        const { zone_id } = params;
        return this._client.delete(`/zones/${zone_id}/waiting_rooms/${waitingRoomId}`, options)._thenUnwrap((obj) => obj.result);
    }
    /**
     * Patches a configured waiting room.
     */
    edit(waitingRoomId, params, options) {
        const { zone_id, ...body } = params;
        return this._client.patch(`/zones/${zone_id}/waiting_rooms/${waitingRoomId}`, {
            body,
            ...options,
        })._thenUnwrap((obj) => obj.result);
    }
    /**
     * Fetches a single configured waiting room.
     */
    get(waitingRoomId, params, options) {
        const { zone_id } = params;
        return this._client.get(`/zones/${zone_id}/waiting_rooms/${waitingRoomId}`, options)._thenUnwrap((obj) => obj.result);
    }
}
export class WaitingRoomsSinglePage extends SinglePage {
}
(function (WaitingRooms) {
    WaitingRooms.Page = PageAPI.Page;
    WaitingRooms.Events = EventsAPI.Events;
    WaitingRooms.EventsSinglePage = EventsAPI.EventsSinglePage;
    WaitingRooms.Rules = RulesAPI.Rules;
    WaitingRooms.WaitingRoomRulesSinglePage = RulesAPI.WaitingRoomRulesSinglePage;
    WaitingRooms.Statuses = StatusesAPI.Statuses;
    WaitingRooms.Settings = SettingsAPI.Settings;
})(WaitingRooms || (WaitingRooms = {}));
//# sourceMappingURL=waiting-rooms.mjs.map