import * as Core from "../../../core.js";
import { APIResource } from "../../../resource.js";
import * as BrotliAPI from "./brotli.js";
export declare class BrotliResource extends APIResource {
    /**
     * When the client requesting an asset supports the Brotli compression algorithm,
     * Cloudflare will serve a Brotli compressed version of the asset.
     */
    edit(params: BrotliEditParams, options?: Core.RequestOptions): Core.APIPromise<Brotli>;
    /**
     * When the client requesting an asset supports the Brotli compression algorithm,
     * Cloudflare will serve a Brotli compressed version of the asset.
     */
    get(params: BrotliGetParams, options?: Core.RequestOptions): Core.APIPromise<Brotli>;
}
/**
 * When the client requesting an asset supports the Brotli compression algorithm,
 * Cloudflare will serve a Brotli compressed version of the asset.
 */
export interface Brotli {
    /**
     * ID of the zone setting.
     */
    id: 'brotli';
    /**
     * Current value of the zone setting.
     */
    value: 'off' | 'on';
    /**
     * Whether or not this setting can be modified for this zone (based on your
     * Cloudflare plan level).
     */
    editable?: true | false;
    /**
     * last time this setting was modified.
     */
    modified_on?: string | null;
}
export interface BrotliEditParams {
    /**
     * Path param: Identifier
     */
    zone_id: string;
    /**
     * Body param: Value of the zone setting.
     */
    value: 'off' | 'on';
}
export interface BrotliGetParams {
    /**
     * Identifier
     */
    zone_id: string;
}
export declare namespace BrotliResource {
    export import Brotli = BrotliAPI.Brotli;
    export import BrotliEditParams = BrotliAPI.BrotliEditParams;
    export import BrotliGetParams = BrotliAPI.BrotliGetParams;
}
//# sourceMappingURL=brotli.d.ts.map