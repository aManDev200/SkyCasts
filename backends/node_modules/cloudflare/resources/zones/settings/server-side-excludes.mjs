// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { APIResource } from "../../../resource.mjs";
import * as ServerSideExcludesAPI from "./server-side-excludes.mjs";
export class ServerSideExcludes extends APIResource {
    /**
     * If there is sensitive content on your website that you want visible to real
     * visitors, but that you want to hide from suspicious visitors, all you have to do
     * is wrap the content with Cloudflare SSE tags. Wrap any content that you want to
     * be excluded from suspicious visitors in the following SSE tags:
     * <!--sse--><!--/sse-->. For example: <!--sse--> Bad visitors won't see my phone
     * number, 555-555-5555 <!--/sse-->. Note: SSE only will work with HTML. If you
     * have HTML minification enabled, you won't see the SSE tags in your HTML source
     * when it's served through Cloudflare. SSE will still function in this case, as
     * Cloudflare's HTML minification and SSE functionality occur on-the-fly as the
     * resource moves through our network to the visitor's computer.
     * (https://support.cloudflare.com/hc/en-us/articles/200170036).
     */
    edit(params, options) {
        const { zone_id, ...body } = params;
        return this._client.patch(`/zones/${zone_id}/settings/server_side_exclude`, {
            body,
            ...options,
        })._thenUnwrap((obj) => obj.result);
    }
    /**
     * If there is sensitive content on your website that you want visible to real
     * visitors, but that you want to hide from suspicious visitors, all you have to do
     * is wrap the content with Cloudflare SSE tags. Wrap any content that you want to
     * be excluded from suspicious visitors in the following SSE tags:
     * <!--sse--><!--/sse-->. For example: <!--sse--> Bad visitors won't see my phone
     * number, 555-555-5555 <!--/sse-->. Note: SSE only will work with HTML. If you
     * have HTML minification enabled, you won't see the SSE tags in your HTML source
     * when it's served through Cloudflare. SSE will still function in this case, as
     * Cloudflare's HTML minification and SSE functionality occur on-the-fly as the
     * resource moves through our network to the visitor's computer.
     * (https://support.cloudflare.com/hc/en-us/articles/200170036).
     */
    get(params, options) {
        const { zone_id } = params;
        return this._client.get(`/zones/${zone_id}/settings/server_side_exclude`, options)._thenUnwrap((obj) => obj.result);
    }
}
(function (ServerSideExcludes) {
    ServerSideExcludes.ServerSideExcludes = ServerSideExcludesAPI.ServerSideExcludes;
})(ServerSideExcludes || (ServerSideExcludes = {}));
//# sourceMappingURL=server-side-excludes.mjs.map