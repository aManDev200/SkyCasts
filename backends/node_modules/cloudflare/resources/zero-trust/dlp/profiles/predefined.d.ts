import * as Core from "../../../../core.js";
import { APIResource } from "../../../../resource.js";
import * as PredefinedAPI from "./predefined.js";
import * as ProfilesAPI from "./profiles.js";
export declare class Predefined extends APIResource {
    /**
     * Updates a DLP predefined profile. Only supports enabling/disabling entries.
     */
    update(profileId: string, params: PredefinedUpdateParams, options?: Core.RequestOptions): Core.APIPromise<PredefinedProfile>;
    /**
     * Fetches a predefined DLP profile.
     */
    get(profileId: string, params: PredefinedGetParams, options?: Core.RequestOptions): Core.APIPromise<PredefinedProfile>;
}
export interface PredefinedProfile {
    /**
     * The ID for this profile
     */
    id?: string;
    /**
     * Related DLP policies will trigger when the match count exceeds the number set.
     */
    allowed_match_count?: number;
    /**
     * Scan the context of predefined entries to only return matches surrounded by
     * keywords.
     */
    context_awareness?: ProfilesAPI.ContextAwareness;
    /**
     * The entries for this profile.
     */
    entries?: Array<PredefinedProfile.Entry>;
    /**
     * The name of the profile.
     */
    name?: string;
    /**
     * If true, scan images via OCR to determine if any text present matches filters.
     */
    ocr_enabled?: boolean;
    /**
     * The type of the profile.
     */
    type?: 'predefined';
}
export declare namespace PredefinedProfile {
    /**
     * A predefined entry that matches a profile
     */
    interface Entry {
        /**
         * The ID for this entry
         */
        id?: string;
        /**
         * Whether the entry is enabled or not.
         */
        enabled?: boolean;
        /**
         * The name of the entry.
         */
        name?: string;
        /**
         * ID of the parent profile
         */
        profile_id?: unknown;
    }
}
export interface PredefinedUpdateParams {
    /**
     * Path param: Identifier
     */
    account_id: string;
    /**
     * Body param: Related DLP policies will trigger when the match count exceeds the
     * number set.
     */
    allowed_match_count?: number;
    /**
     * Body param: Scan the context of predefined entries to only return matches
     * surrounded by keywords.
     */
    context_awareness?: ProfilesAPI.ContextAwarenessParam;
    /**
     * Body param: The entries for this profile.
     */
    entries?: Array<PredefinedUpdateParams.Entry>;
    /**
     * Body param: If true, scan images via OCR to determine if any text present
     * matches filters.
     */
    ocr_enabled?: boolean;
}
export declare namespace PredefinedUpdateParams {
    interface Entry {
        /**
         * Whether the entry is enabled or not.
         */
        enabled?: boolean;
    }
}
export interface PredefinedGetParams {
    /**
     * Identifier
     */
    account_id: string;
}
export declare namespace Predefined {
    export import PredefinedProfile = PredefinedAPI.PredefinedProfile;
    export import PredefinedUpdateParams = PredefinedAPI.PredefinedUpdateParams;
    export import PredefinedGetParams = PredefinedAPI.PredefinedGetParams;
}
//# sourceMappingURL=predefined.d.ts.map