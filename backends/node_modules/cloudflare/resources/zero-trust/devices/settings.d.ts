import * as Core from "../../../core.js";
import { APIResource } from "../../../resource.js";
import * as SettingsAPI from "./settings.js";
export declare class Settings extends APIResource {
    /**
     * Updates the current device settings for a Zero Trust account.
     */
    update(params: SettingUpdateParams, options?: Core.RequestOptions): Core.APIPromise<DeviceSettings | null>;
    /**
     * Describes the current device settings for a Zero Trust account.
     */
    list(params: SettingListParams, options?: Core.RequestOptions): Core.APIPromise<DeviceSettings | null>;
}
export interface DeviceSettings {
    /**
     * Enable gateway proxy filtering on TCP.
     */
    gateway_proxy_enabled?: boolean;
    /**
     * Enable gateway proxy filtering on UDP.
     */
    gateway_udp_proxy_enabled?: boolean;
    /**
     * Enable installation of cloudflare managed root certificate.
     */
    root_certificate_installation_enabled?: boolean;
    /**
     * Enable using CGNAT virtual IPv4.
     */
    use_zt_virtual_ip?: boolean;
}
export interface SettingUpdateParams {
    /**
     * Path param:
     */
    account_id: string;
    /**
     * Body param: Enable gateway proxy filtering on TCP.
     */
    gateway_proxy_enabled?: boolean;
    /**
     * Body param: Enable gateway proxy filtering on UDP.
     */
    gateway_udp_proxy_enabled?: boolean;
    /**
     * Body param: Enable installation of cloudflare managed root certificate.
     */
    root_certificate_installation_enabled?: boolean;
    /**
     * Body param: Enable using CGNAT virtual IPv4.
     */
    use_zt_virtual_ip?: boolean;
}
export interface SettingListParams {
    account_id: string;
}
export declare namespace Settings {
    export import DeviceSettings = SettingsAPI.DeviceSettings;
    export import SettingUpdateParams = SettingsAPI.SettingUpdateParams;
    export import SettingListParams = SettingsAPI.SettingListParams;
}
//# sourceMappingURL=settings.d.ts.map