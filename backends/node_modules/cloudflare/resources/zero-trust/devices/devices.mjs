// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { APIResource } from "../../../resource.mjs";
import * as DevicesAPI from "./devices.mjs";
import * as DEXTestsAPI from "./dex-tests.mjs";
import * as NetworksAPI from "./networks.mjs";
import * as OverrideCodesAPI from "./override-codes.mjs";
import * as RevokeAPI from "./revoke.mjs";
import * as SettingsAPI from "./settings.mjs";
import * as UnrevokeAPI from "./unrevoke.mjs";
import * as PoliciesAPI from "./policies/policies.mjs";
import * as PostureAPI from "./posture/posture.mjs";
import { SinglePage } from "../../../pagination.mjs";
export class Devices extends APIResource {
    constructor() {
        super(...arguments);
        this.dexTests = new DEXTestsAPI.DEXTests(this._client);
        this.networks = new NetworksAPI.Networks(this._client);
        this.policies = new PoliciesAPI.Policies(this._client);
        this.posture = new PostureAPI.Posture(this._client);
        this.revoke = new RevokeAPI.Revoke(this._client);
        this.settings = new SettingsAPI.Settings(this._client);
        this.unrevoke = new UnrevokeAPI.Unrevoke(this._client);
        this.overrideCodes = new OverrideCodesAPI.OverrideCodes(this._client);
    }
    /**
     * Fetches a list of enrolled devices.
     */
    list(params, options) {
        const { account_id } = params;
        return this._client.getAPIList(`/accounts/${account_id}/devices`, DevicesSinglePage, options);
    }
    /**
     * Fetches details for a single device.
     */
    get(deviceId, params, options) {
        const { account_id } = params;
        return this._client.get(`/accounts/${account_id}/devices/${deviceId}`, options)._thenUnwrap((obj) => obj.result);
    }
}
export class DevicesSinglePage extends SinglePage {
}
(function (Devices) {
    Devices.DevicesSinglePage = DevicesAPI.DevicesSinglePage;
    Devices.DEXTests = DEXTestsAPI.DEXTests;
    Devices.SchemaHTTPSSinglePage = DEXTestsAPI.SchemaHTTPSSinglePage;
    Devices.Networks = NetworksAPI.Networks;
    Devices.DeviceNetworksSinglePage = NetworksAPI.DeviceNetworksSinglePage;
    Devices.Policies = PoliciesAPI.Policies;
    Devices.SettingsPoliciesSinglePage = PoliciesAPI.SettingsPoliciesSinglePage;
    Devices.Posture = PostureAPI.Posture;
    Devices.DevicePostureRulesSinglePage = PostureAPI.DevicePostureRulesSinglePage;
    Devices.Revoke = RevokeAPI.Revoke;
    Devices.Settings = SettingsAPI.Settings;
    Devices.Unrevoke = UnrevokeAPI.Unrevoke;
    Devices.OverrideCodes = OverrideCodesAPI.OverrideCodes;
})(Devices || (Devices = {}));
//# sourceMappingURL=devices.mjs.map