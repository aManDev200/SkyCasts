import * as Core from "../../../core.js";
import { APIResource } from "../../../resource.js";
import * as SummaryAPI from "./summary.js";
export declare class Summary extends APIResource {
    /**
     * Get risk score info for all users in the account
     */
    get(accountIdentifier: string, query?: SummaryGetParams, options?: Core.RequestOptions): Core.APIPromise<SummaryGetResponse>;
    get(accountIdentifier: string, options?: Core.RequestOptions): Core.APIPromise<SummaryGetResponse>;
}
export interface SummaryGetResponse {
    users?: Array<SummaryGetResponse.User>;
}
export declare namespace SummaryGetResponse {
    interface User {
        email: string;
        event_count: number;
        last_event: string;
        max_risk_level: 'low' | 'medium' | 'high';
        name: string;
        /**
         * The ID for a user
         */
        user_id: string;
    }
}
export interface SummaryGetParams {
    direction?: 'desc' | 'asc';
    order_by?: 'timestamp' | 'event_count' | 'max_risk_level';
    page?: number;
    per_page?: number;
}
export declare namespace Summary {
    export import SummaryGetResponse = SummaryAPI.SummaryGetResponse;
    export import SummaryGetParams = SummaryAPI.SummaryGetParams;
}
//# sourceMappingURL=summary.d.ts.map