// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { APIResource } from "../../../resource.mjs";
import { isRequestOptions } from "../../../core.mjs";
import * as BehavioursAPI from "./behaviours.mjs";
import * as SummaryAPI from "./summary.mjs";
import * as IntegrationsAPI from "./integrations/integrations.mjs";
export class RiskScoring extends APIResource {
    constructor() {
        super(...arguments);
        this.behaviours = new BehavioursAPI.Behaviours(this._client);
        this.summary = new SummaryAPI.Summary(this._client);
        this.integrations = new IntegrationsAPI.Integrations(this._client);
    }
    get(accountIdentifier, userId, query = {}, options) {
        if (isRequestOptions(query)) {
            return this.get(accountIdentifier, userId, {}, query);
        }
        return this._client.get(`/accounts/${accountIdentifier}/zt_risk_scoring/${userId}`, {
            query,
            ...options,
        })._thenUnwrap((obj) => obj.result);
    }
    /**
     * Clear the risk score for a particular user
     */
    reset(accountIdentifier, userId, options) {
        return this._client.post(`/accounts/${accountIdentifier}/zt_risk_scoring/${userId}/reset`, options)._thenUnwrap((obj) => obj.result);
    }
}
(function (RiskScoring) {
    RiskScoring.Behaviours = BehavioursAPI.Behaviours;
    RiskScoring.Summary = SummaryAPI.Summary;
    RiskScoring.Integrations = IntegrationsAPI.Integrations;
    RiskScoring.IntegrationListResponsesSinglePage = IntegrationsAPI.IntegrationListResponsesSinglePage;
})(RiskScoring || (RiskScoring = {}));
//# sourceMappingURL=risk-scoring.mjs.map