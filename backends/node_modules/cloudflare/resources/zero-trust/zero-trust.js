"use strict";
// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ZeroTrust = void 0;
const resource_1 = require("../../resource.js");
const ConnectivitySettingsAPI = __importStar(require("./connectivity-settings.js"));
const IdentityProvidersAPI = __importStar(require("./identity-providers.js"));
const OrganizationsAPI = __importStar(require("./organizations.js"));
const SeatsAPI = __importStar(require("./seats.js"));
const AccessAPI = __importStar(require("./access/access.js"));
const DevicesAPI = __importStar(require("./devices/devices.js"));
const DEXAPI = __importStar(require("./dex/dex.js"));
const DLPAPI = __importStar(require("./dlp/dlp.js"));
const GatewayAPI = __importStar(require("./gateway/gateway.js"));
const NetworksAPI = __importStar(require("./networks/networks.js"));
const RiskScoringAPI = __importStar(require("./risk-scoring/risk-scoring.js"));
const TunnelsAPI = __importStar(require("./tunnels/tunnels.js"));
class ZeroTrust extends resource_1.APIResource {
    constructor() {
        super(...arguments);
        this.devices = new DevicesAPI.Devices(this._client);
        this.identityProviders = new IdentityProvidersAPI.IdentityProviders(this._client);
        this.organizations = new OrganizationsAPI.Organizations(this._client);
        this.seats = new SeatsAPI.Seats(this._client);
        this.access = new AccessAPI.Access(this._client);
        this.dex = new DEXAPI.DEX(this._client);
        this.tunnels = new TunnelsAPI.Tunnels(this._client);
        this.connectivitySettings = new ConnectivitySettingsAPI.ConnectivitySettings(this._client);
        this.dlp = new DLPAPI.DLP(this._client);
        this.gateway = new GatewayAPI.Gateway(this._client);
        this.networks = new NetworksAPI.Networks(this._client);
        this.riskScoring = new RiskScoringAPI.RiskScoring(this._client);
    }
}
exports.ZeroTrust = ZeroTrust;
(function (ZeroTrust) {
    ZeroTrust.Devices = DevicesAPI.Devices;
    ZeroTrust.DevicesSinglePage = DevicesAPI.DevicesSinglePage;
    ZeroTrust.IdentityProviders = IdentityProvidersAPI.IdentityProviders;
    ZeroTrust.IdentityProviderListResponsesSinglePage = IdentityProvidersAPI.IdentityProviderListResponsesSinglePage;
    ZeroTrust.Organizations = OrganizationsAPI.Organizations;
    ZeroTrust.Seats = SeatsAPI.Seats;
    ZeroTrust.Access = AccessAPI.Access;
    ZeroTrust.DEX = DEXAPI.DEX;
    ZeroTrust.Tunnels = TunnelsAPI.Tunnels;
    ZeroTrust.TunnelListResponsesV4PagePaginationArray = TunnelsAPI.TunnelListResponsesV4PagePaginationArray;
    ZeroTrust.ConnectivitySettings = ConnectivitySettingsAPI.ConnectivitySettings;
    ZeroTrust.DLP = DLPAPI.DLP;
    ZeroTrust.Gateway = GatewayAPI.Gateway;
    ZeroTrust.Networks = NetworksAPI.Networks;
    ZeroTrust.RiskScoring = RiskScoringAPI.RiskScoring;
})(ZeroTrust = exports.ZeroTrust || (exports.ZeroTrust = {}));
//# sourceMappingURL=zero-trust.js.map