"use strict";
// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmailRouting = void 0;
const resource_1 = require("../../resource.js");
const AddressesAPI = __importStar(require("./addresses.js"));
const DNSAPI = __importStar(require("./dns.js"));
const RulesAPI = __importStar(require("./rules/rules.js"));
class EmailRouting extends resource_1.APIResource {
    constructor() {
        super(...arguments);
        this.dns = new DNSAPI.DNS(this._client);
        this.rules = new RulesAPI.Rules(this._client);
        this.addresses = new AddressesAPI.Addresses(this._client);
    }
    /**
     * Disable your Email Routing zone. Also removes additional MX records previously
     * required for Email Routing to work.
     */
    disable(zoneIdentifier, body, options) {
        return this._client.post(`/zones/${zoneIdentifier}/email/routing/disable`, {
            body,
            ...options,
        })._thenUnwrap((obj) => obj.result);
    }
    /**
     * Enable you Email Routing zone. Add and lock the necessary MX and SPF records.
     */
    enable(zoneIdentifier, body, options) {
        return this._client.post(`/zones/${zoneIdentifier}/email/routing/enable`, {
            body,
            ...options,
        })._thenUnwrap((obj) => obj.result);
    }
    /**
     * Get information about the settings for your Email Routing zone.
     */
    get(zoneIdentifier, options) {
        return this._client.get(`/zones/${zoneIdentifier}/email/routing`, options)._thenUnwrap((obj) => obj.result);
    }
}
exports.EmailRouting = EmailRouting;
(function (EmailRouting) {
    EmailRouting.DNS = DNSAPI.DNS;
    EmailRouting.Rules = RulesAPI.Rules;
    EmailRouting.EmailRoutingRulesV4PagePaginationArray = RulesAPI.EmailRoutingRulesV4PagePaginationArray;
    EmailRouting.Addresses = AddressesAPI.Addresses;
    EmailRouting.AddressesV4PagePaginationArray = AddressesAPI.AddressesV4PagePaginationArray;
})(EmailRouting = exports.EmailRouting || (exports.EmailRouting = {}));
//# sourceMappingURL=email-routing.js.map