import * as Core from "../../../../core.js";
import { APIResource } from "../../../../resource.js";
import * as StatusesAPI from "./statuses.js";
export declare class Statuses extends APIResource {
    /**
     * Advertise or withdraw BGP route for a prefix.
     */
    edit(prefixId: string, params: StatusEditParams, options?: Core.RequestOptions): Core.APIPromise<StatusEditResponse>;
    /**
     * List the current advertisement state for a prefix.
     */
    get(prefixId: string, params: StatusGetParams, options?: Core.RequestOptions): Core.APIPromise<StatusGetResponse>;
}
export interface StatusEditResponse {
    /**
     * Enablement of prefix advertisement to the Internet.
     */
    advertised?: boolean;
    /**
     * Last time the advertisement status was changed. This field is only not 'null' if
     * on demand is enabled.
     */
    advertised_modified_at?: string | null;
}
export interface StatusGetResponse {
    /**
     * Enablement of prefix advertisement to the Internet.
     */
    advertised?: boolean;
    /**
     * Last time the advertisement status was changed. This field is only not 'null' if
     * on demand is enabled.
     */
    advertised_modified_at?: string | null;
}
export interface StatusEditParams {
    /**
     * Path param: Identifier
     */
    account_id: string;
    /**
     * Body param: Enablement of prefix advertisement to the Internet.
     */
    advertised: boolean;
}
export interface StatusGetParams {
    /**
     * Identifier
     */
    account_id: string;
}
export declare namespace Statuses {
    export import StatusEditResponse = StatusesAPI.StatusEditResponse;
    export import StatusGetResponse = StatusesAPI.StatusGetResponse;
    export import StatusEditParams = StatusesAPI.StatusEditParams;
    export import StatusGetParams = StatusesAPI.StatusGetParams;
}
//# sourceMappingURL=statuses.d.ts.map