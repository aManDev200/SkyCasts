import * as Core from "../core.js";
import { APIResource } from "../resource.js";
export declare class CustomNameservers extends APIResource {
    /**
     * Add Account Custom Nameserver
     */
    create(params: CustomNameserverCreateParams, options?: Core.RequestOptions): Core.APIPromise<CustomNameserver>;
    /**
     * Delete Account Custom Nameserver
     */
    delete(customNSId: string, params: CustomNameserverDeleteParams, options?: Core.RequestOptions): Core.APIPromise<CustomNameserverDeleteResponse | null>;
    /**
     * Get Eligible Zones for Account Custom Nameservers
     */
    availabilty(params: CustomNameserverAvailabiltyParams, options?: Core.RequestOptions): Core.APIPromise<CustomNameserverAvailabiltyResponse | null>;
    /**
     * List an account's custom nameservers.
     */
    get(params: CustomNameserverGetParams, options?: Core.RequestOptions): Core.APIPromise<CustomNameserverGetResponse | null>;
}
/**
 * A single account custom nameserver.
 */
export interface CustomNameserver {
    /**
     * A and AAAA records associated with the nameserver.
     */
    dns_records: Array<CustomNameserver.DNSRecord>;
    /**
     * The FQDN of the name server.
     */
    ns_name: string;
    /**
     * @deprecated: Verification status of the nameserver.
     */
    status: 'moved' | 'pending' | 'verified';
    /**
     * Identifier
     */
    zone_tag: string;
    /**
     * The number of the set that this name server belongs to.
     */
    ns_set?: number;
}
export declare namespace CustomNameserver {
    interface DNSRecord {
        /**
         * DNS record type.
         */
        type?: 'A' | 'AAAA';
        /**
         * DNS record contents (an IPv4 or IPv6 address).
         */
        value?: string;
    }
}
export type CustomNameserverDeleteResponse = Array<unknown>;
export type CustomNameserverAvailabiltyResponse = Array<string>;
export type CustomNameserverGetResponse = Array<CustomNameserver>;
export interface CustomNameserverCreateParams {
    /**
     * Path param: Account identifier tag.
     */
    account_id: string;
    /**
     * Body param: The FQDN of the name server.
     */
    ns_name: string;
    /**
     * Body param: The number of the set that this name server belongs to.
     */
    ns_set?: number;
}
export interface CustomNameserverDeleteParams {
    /**
     * Account identifier tag.
     */
    account_id: string;
}
export interface CustomNameserverAvailabiltyParams {
    /**
     * Account identifier tag.
     */
    account_id: string;
}
export interface CustomNameserverGetParams {
    /**
     * Account identifier tag.
     */
    account_id: string;
}
//# sourceMappingURL=custom-nameservers.d.ts.map