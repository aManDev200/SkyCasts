import * as Core from "../../../core.js";
import { APIResource } from "../../../resource.js";
import * as ConfigsAPI from "./configs.js";
import * as FullAPI from "./full.js";
export declare class Configs extends APIResource {
    full: FullAPI.Full;
    /**
     * Create a new network monitoring configuration.
     */
    create(params: ConfigCreateParams, options?: Core.RequestOptions): Core.APIPromise<Configuration>;
    /**
     * Update an existing network monitoring configuration, requires the entire
     * configuration to be updated at once.
     */
    update(params: ConfigUpdateParams, options?: Core.RequestOptions): Core.APIPromise<Configuration>;
    /**
     * Delete an existing network monitoring configuration.
     */
    delete(params: ConfigDeleteParams, options?: Core.RequestOptions): Core.APIPromise<Configuration>;
    /**
     * Update fields in an existing network monitoring configuration.
     */
    edit(params: ConfigEditParams, options?: Core.RequestOptions): Core.APIPromise<Configuration>;
    /**
     * Lists default sampling and router IPs for account.
     */
    get(params: ConfigGetParams, options?: Core.RequestOptions): Core.APIPromise<Configuration>;
}
export interface Configuration {
    /**
     * Fallback sampling rate of flow messages being sent in packets per second. This
     * should match the packet sampling rate configured on the router.
     */
    default_sampling: number;
    /**
     * The account name.
     */
    name: string;
    router_ips: Array<string>;
}
export interface ConfigCreateParams {
    /**
     * Path param:
     */
    account_id: string;
    /**
     * Body param:
     */
    body: unknown;
}
export interface ConfigUpdateParams {
    /**
     * Path param:
     */
    account_id: string;
    /**
     * Body param:
     */
    body: unknown;
}
export interface ConfigDeleteParams {
    account_id: string;
}
export interface ConfigEditParams {
    /**
     * Path param:
     */
    account_id: string;
    /**
     * Body param:
     */
    body: unknown;
}
export interface ConfigGetParams {
    account_id: string;
}
export declare namespace Configs {
    export import Configuration = ConfigsAPI.Configuration;
    export import ConfigCreateParams = ConfigsAPI.ConfigCreateParams;
    export import ConfigUpdateParams = ConfigsAPI.ConfigUpdateParams;
    export import ConfigDeleteParams = ConfigsAPI.ConfigDeleteParams;
    export import ConfigEditParams = ConfigsAPI.ConfigEditParams;
    export import ConfigGetParams = ConfigsAPI.ConfigGetParams;
    export import Full = FullAPI.Full;
    export import FullGetParams = FullAPI.FullGetParams;
}
//# sourceMappingURL=configs.d.ts.map