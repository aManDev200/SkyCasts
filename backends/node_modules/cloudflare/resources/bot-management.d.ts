import * as Core from "../core.js";
import { APIResource } from "../resource.js";
export declare class BotManagement extends APIResource {
    /**
     * Updates the Bot Management configuration for a zone.
     *
     * This API is used to update:
     *
     * - **Bot Fight Mode**
     * - **Super Bot Fight Mode**
     * - **Bot Management for Enterprise**
     *
     * See [Bot Plans](https://developers.cloudflare.com/bots/plans/) for more
     * information on the different plans
     */
    update(params: BotManagementUpdateParams, options?: Core.RequestOptions): Core.APIPromise<BotManagementUpdateResponse>;
    /**
     * Retrieve a zone's Bot Management Config
     */
    get(params: BotManagementGetParams, options?: Core.RequestOptions): Core.APIPromise<BotManagementGetResponse>;
}
export interface BotFightModeConfiguration {
    /**
     * Use lightweight, invisible JavaScript detections to improve Bot Management.
     * [Learn more about JavaScript Detections](https://developers.cloudflare.com/bots/reference/javascript-detections/).
     */
    enable_js?: boolean;
    /**
     * Whether to enable Bot Fight Mode.
     */
    fight_mode?: boolean;
    /**
     * A read-only field that indicates whether the zone currently is running the
     * latest ML model.
     */
    using_latest_model?: boolean;
}
export interface SubscriptionConfiguration {
    /**
     * Automatically update to the newest bot detection models created by Cloudflare as
     * they are released.
     * [Learn more.](https://developers.cloudflare.com/bots/reference/machine-learning-models#model-versions-and-release-notes)
     */
    auto_update_model?: boolean;
    /**
     * Use lightweight, invisible JavaScript detections to improve Bot Management.
     * [Learn more about JavaScript Detections](https://developers.cloudflare.com/bots/reference/javascript-detections/).
     */
    enable_js?: boolean;
    /**
     * Whether to disable tracking the highest bot score for a session in the Bot
     * Management cookie.
     */
    suppress_session_score?: boolean;
    /**
     * A read-only field that indicates whether the zone currently is running the
     * latest ML model.
     */
    using_latest_model?: boolean;
}
export interface SuperBotFightModeDefinitelyConfiguration {
    /**
     * Use lightweight, invisible JavaScript detections to improve Bot Management.
     * [Learn more about JavaScript Detections](https://developers.cloudflare.com/bots/reference/javascript-detections/).
     */
    enable_js?: boolean;
    /**
     * Whether to optimize Super Bot Fight Mode protections for Wordpress.
     */
    optimize_wordpress?: boolean;
    /**
     * Super Bot Fight Mode (SBFM) action to take on definitely automated requests.
     */
    sbfm_definitely_automated?: 'allow' | 'block' | 'managed_challenge';
    /**
     * Super Bot Fight Mode (SBFM) to enable static resource protection. Enable if
     * static resources on your application need bot protection. Note: Static resource
     * protection can also result in legitimate traffic being blocked.
     */
    sbfm_static_resource_protection?: boolean;
    /**
     * Super Bot Fight Mode (SBFM) action to take on verified bots requests.
     */
    sbfm_verified_bots?: 'allow' | 'block';
    /**
     * A read-only field that indicates whether the zone currently is running the
     * latest ML model.
     */
    using_latest_model?: boolean;
}
export interface SuperBotFightModeLikelyConfiguration {
    /**
     * Use lightweight, invisible JavaScript detections to improve Bot Management.
     * [Learn more about JavaScript Detections](https://developers.cloudflare.com/bots/reference/javascript-detections/).
     */
    enable_js?: boolean;
    /**
     * Whether to optimize Super Bot Fight Mode protections for Wordpress.
     */
    optimize_wordpress?: boolean;
    /**
     * Super Bot Fight Mode (SBFM) action to take on definitely automated requests.
     */
    sbfm_definitely_automated?: 'allow' | 'block' | 'managed_challenge';
    /**
     * Super Bot Fight Mode (SBFM) action to take on likely automated requests.
     */
    sbfm_likely_automated?: 'allow' | 'block' | 'managed_challenge';
    /**
     * Super Bot Fight Mode (SBFM) to enable static resource protection. Enable if
     * static resources on your application need bot protection. Note: Static resource
     * protection can also result in legitimate traffic being blocked.
     */
    sbfm_static_resource_protection?: boolean;
    /**
     * Super Bot Fight Mode (SBFM) action to take on verified bots requests.
     */
    sbfm_verified_bots?: 'allow' | 'block';
    /**
     * A read-only field that indicates whether the zone currently is running the
     * latest ML model.
     */
    using_latest_model?: boolean;
}
export type BotManagementUpdateResponse = BotFightModeConfiguration | SuperBotFightModeDefinitelyConfiguration | SuperBotFightModeLikelyConfiguration | SubscriptionConfiguration;
export type BotManagementGetResponse = BotFightModeConfiguration | SuperBotFightModeDefinitelyConfiguration | SuperBotFightModeLikelyConfiguration | SubscriptionConfiguration;
export type BotManagementUpdateParams = BotManagementUpdateParams.BotFightModeConfiguration | BotManagementUpdateParams.SuperBotFightModeDefinitelyConfiguration | BotManagementUpdateParams.SuperBotFightModeLikelyConfiguration | BotManagementUpdateParams.SubscriptionConfiguration;
export declare namespace BotManagementUpdateParams {
    interface BotFightModeConfiguration {
        /**
         * Path param: Identifier
         */
        zone_id: string;
        /**
         * Body param: Use lightweight, invisible JavaScript detections to improve Bot
         * Management.
         * [Learn more about JavaScript Detections](https://developers.cloudflare.com/bots/reference/javascript-detections/).
         */
        enable_js?: boolean;
        /**
         * Body param: Whether to enable Bot Fight Mode.
         */
        fight_mode?: boolean;
    }
    interface SuperBotFightModeDefinitelyConfiguration {
        /**
         * Path param: Identifier
         */
        zone_id: string;
        /**
         * Body param: Use lightweight, invisible JavaScript detections to improve Bot
         * Management.
         * [Learn more about JavaScript Detections](https://developers.cloudflare.com/bots/reference/javascript-detections/).
         */
        enable_js?: boolean;
        /**
         * Body param: Whether to optimize Super Bot Fight Mode protections for Wordpress.
         */
        optimize_wordpress?: boolean;
        /**
         * Body param: Super Bot Fight Mode (SBFM) action to take on definitely automated
         * requests.
         */
        sbfm_definitely_automated?: 'allow' | 'block' | 'managed_challenge';
        /**
         * Body param: Super Bot Fight Mode (SBFM) to enable static resource protection.
         * Enable if static resources on your application need bot protection. Note: Static
         * resource protection can also result in legitimate traffic being blocked.
         */
        sbfm_static_resource_protection?: boolean;
        /**
         * Body param: Super Bot Fight Mode (SBFM) action to take on verified bots
         * requests.
         */
        sbfm_verified_bots?: 'allow' | 'block';
    }
    interface SuperBotFightModeLikelyConfiguration {
        /**
         * Path param: Identifier
         */
        zone_id: string;
        /**
         * Body param: Use lightweight, invisible JavaScript detections to improve Bot
         * Management.
         * [Learn more about JavaScript Detections](https://developers.cloudflare.com/bots/reference/javascript-detections/).
         */
        enable_js?: boolean;
        /**
         * Body param: Whether to optimize Super Bot Fight Mode protections for Wordpress.
         */
        optimize_wordpress?: boolean;
        /**
         * Body param: Super Bot Fight Mode (SBFM) action to take on definitely automated
         * requests.
         */
        sbfm_definitely_automated?: 'allow' | 'block' | 'managed_challenge';
        /**
         * Body param: Super Bot Fight Mode (SBFM) action to take on likely automated
         * requests.
         */
        sbfm_likely_automated?: 'allow' | 'block' | 'managed_challenge';
        /**
         * Body param: Super Bot Fight Mode (SBFM) to enable static resource protection.
         * Enable if static resources on your application need bot protection. Note: Static
         * resource protection can also result in legitimate traffic being blocked.
         */
        sbfm_static_resource_protection?: boolean;
        /**
         * Body param: Super Bot Fight Mode (SBFM) action to take on verified bots
         * requests.
         */
        sbfm_verified_bots?: 'allow' | 'block';
    }
    interface SubscriptionConfiguration {
        /**
         * Path param: Identifier
         */
        zone_id: string;
        /**
         * Body param: Automatically update to the newest bot detection models created by
         * Cloudflare as they are released.
         * [Learn more.](https://developers.cloudflare.com/bots/reference/machine-learning-models#model-versions-and-release-notes)
         */
        auto_update_model?: boolean;
        /**
         * Body param: Use lightweight, invisible JavaScript detections to improve Bot
         * Management.
         * [Learn more about JavaScript Detections](https://developers.cloudflare.com/bots/reference/javascript-detections/).
         */
        enable_js?: boolean;
        /**
         * Body param: Whether to disable tracking the highest bot score for a session in
         * the Bot Management cookie.
         */
        suppress_session_score?: boolean;
    }
}
export interface BotManagementGetParams {
    /**
     * Identifier
     */
    zone_id: string;
}
//# sourceMappingURL=bot-management.d.ts.map