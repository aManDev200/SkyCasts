// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { APIResource } from "../../resource.mjs";
export class GRETunnels extends APIResource {
    /**
     * Creates new GRE tunnels. Use `?validate_only=true` as an optional query
     * parameter to only run validation without persisting changes.
     */
    create(params, options) {
        const { account_id, body } = params;
        return this._client.post(`/accounts/${account_id}/magic/gre_tunnels`, {
            body: body,
            ...options,
        })._thenUnwrap((obj) => obj.result);
    }
    /**
     * Updates a specific GRE tunnel. Use `?validate_only=true` as an optional query
     * parameter to only run validation without persisting changes.
     */
    update(tunnelIdentifier, params, options) {
        const { account_id, ...body } = params;
        return this._client.put(`/accounts/${account_id}/magic/gre_tunnels/${tunnelIdentifier}`, {
            body,
            ...options,
        })._thenUnwrap((obj) => obj.result);
    }
    /**
     * Lists GRE tunnels associated with an account.
     */
    list(params, options) {
        const { account_id } = params;
        return this._client.get(`/accounts/${account_id}/magic/gre_tunnels`, options)._thenUnwrap((obj) => obj.result);
    }
    /**
     * Disables and removes a specific static GRE tunnel. Use `?validate_only=true` as
     * an optional query parameter to only run validation without persisting changes.
     */
    delete(tunnelIdentifier, params, options) {
        const { account_id } = params;
        return this._client.delete(`/accounts/${account_id}/magic/gre_tunnels/${tunnelIdentifier}`, options)._thenUnwrap((obj) => obj.result);
    }
    /**
     * Lists informtion for a specific GRE tunnel.
     */
    get(tunnelIdentifier, params, options) {
        const { account_id } = params;
        return this._client.get(`/accounts/${account_id}/magic/gre_tunnels/${tunnelIdentifier}`, options)._thenUnwrap((obj) => obj.result);
    }
}
(function (GRETunnels) {
})(GRETunnels || (GRETunnels = {}));
//# sourceMappingURL=gre-tunnels.mjs.map