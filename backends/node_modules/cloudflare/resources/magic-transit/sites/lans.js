"use strict";
// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LANsSinglePage = exports.LANs = void 0;
const resource_1 = require("../../../resource.js");
const LANsAPI = __importStar(require("./lans.js"));
const pagination_1 = require("../../../pagination.js");
class LANs extends resource_1.APIResource {
    /**
     * Creates a new Site LAN. If the site is in high availability mode,
     * static_addressing is required along with secondary and virtual address.
     */
    create(siteId, params, options) {
        const { account_id, ...body } = params;
        return this._client.post(`/accounts/${account_id}/magic/sites/${siteId}/lans`, {
            body,
            ...options,
        })._thenUnwrap((obj) => obj.result);
    }
    /**
     * Update a specific Site LAN.
     */
    update(siteId, lanId, params, options) {
        const { account_id, ...body } = params;
        return this._client.put(`/accounts/${account_id}/magic/sites/${siteId}/lans/${lanId}`, {
            body,
            ...options,
        })._thenUnwrap((obj) => obj.result);
    }
    /**
     * Lists Site LANs associated with an account.
     */
    list(siteId, params, options) {
        const { account_id } = params;
        return this._client.getAPIList(`/accounts/${account_id}/magic/sites/${siteId}/lans`, LANsSinglePage, options);
    }
    /**
     * Remove a specific Site LAN.
     */
    delete(siteId, lanId, params, options) {
        const { account_id } = params;
        return this._client.delete(`/accounts/${account_id}/magic/sites/${siteId}/lans/${lanId}`, options)._thenUnwrap((obj) => obj.result);
    }
    /**
     * Patch a specific Site LAN.
     */
    edit(siteId, lanId, params, options) {
        const { account_id, ...body } = params;
        return this._client.patch(`/accounts/${account_id}/magic/sites/${siteId}/lans/${lanId}`, {
            body,
            ...options,
        })._thenUnwrap((obj) => obj.result);
    }
    /**
     * Get a specific Site LAN.
     */
    get(siteId, lanId, params, options) {
        const { account_id } = params;
        return this._client.get(`/accounts/${account_id}/magic/sites/${siteId}/lans/${lanId}`, options)._thenUnwrap((obj) => obj.result);
    }
}
exports.LANs = LANs;
class LANsSinglePage extends pagination_1.SinglePage {
}
exports.LANsSinglePage = LANsSinglePage;
(function (LANs) {
    LANs.LANsSinglePage = LANsAPI.LANsSinglePage;
})(LANs = exports.LANs || (exports.LANs = {}));
//# sourceMappingURL=lans.js.map