import * as Core from "../../core.js";
import { APIResource } from "../../resource.js";
import * as ConnectorsAPI from "./connectors.js";
import { SinglePage } from "../../pagination.js";
export declare class Connectors extends APIResource {
    /**
     * Replace Connector
     */
    update(connectorId: string, params: ConnectorUpdateParams, options?: Core.RequestOptions): Core.APIPromise<ConnectorUpdateResponse>;
    /**
     * List Connectors
     */
    list(params: ConnectorListParams, options?: Core.RequestOptions): Core.PagePromise<ConnectorListResponsesSinglePage, ConnectorListResponse>;
    /**
     * Update Connector
     */
    edit(connectorId: string, params: ConnectorEditParams, options?: Core.RequestOptions): Core.APIPromise<ConnectorEditResponse>;
    /**
     * Fetch Connector
     */
    get(connectorId: string, params: ConnectorGetParams, options?: Core.RequestOptions): Core.APIPromise<ConnectorGetResponse>;
}
export declare class ConnectorListResponsesSinglePage extends SinglePage<ConnectorListResponse> {
}
export interface ConnectorUpdateResponse {
    id: string;
    activated: boolean;
    interrupt_window_duration_hours: number;
    interrupt_window_hour_of_day: number;
    last_updated: string;
    notes: string;
    timezone: string;
    device?: ConnectorUpdateResponse.Device;
    last_heartbeat?: string;
    last_seen_version?: string;
}
export declare namespace ConnectorUpdateResponse {
    interface Device {
        id: string;
        serial_number?: string;
    }
}
export interface ConnectorListResponse {
    id: string;
    activated: boolean;
    interrupt_window_duration_hours: number;
    interrupt_window_hour_of_day: number;
    last_updated: string;
    notes: string;
    timezone: string;
    device?: ConnectorListResponse.Device;
    last_heartbeat?: string;
    last_seen_version?: string;
}
export declare namespace ConnectorListResponse {
    interface Device {
        id: string;
        serial_number?: string;
    }
}
export interface ConnectorEditResponse {
    id: string;
    activated: boolean;
    interrupt_window_duration_hours: number;
    interrupt_window_hour_of_day: number;
    last_updated: string;
    notes: string;
    timezone: string;
    device?: ConnectorEditResponse.Device;
    last_heartbeat?: string;
    last_seen_version?: string;
}
export declare namespace ConnectorEditResponse {
    interface Device {
        id: string;
        serial_number?: string;
    }
}
export interface ConnectorGetResponse {
    id: string;
    activated: boolean;
    interrupt_window_duration_hours: number;
    interrupt_window_hour_of_day: number;
    last_updated: string;
    notes: string;
    timezone: string;
    device?: ConnectorGetResponse.Device;
    last_heartbeat?: string;
    last_seen_version?: string;
}
export declare namespace ConnectorGetResponse {
    interface Device {
        id: string;
        serial_number?: string;
    }
}
export interface ConnectorUpdateParams {
    /**
     * Path param: Account identifier
     */
    account_id: string;
    /**
     * Body param:
     */
    activated?: boolean;
    /**
     * Body param:
     */
    interrupt_window_duration_hours?: number;
    /**
     * Body param:
     */
    interrupt_window_hour_of_day?: number;
    /**
     * Body param:
     */
    notes?: string;
    /**
     * Body param:
     */
    timezone?: string;
}
export interface ConnectorListParams {
    /**
     * Account identifier
     */
    account_id: string;
}
export interface ConnectorEditParams {
    /**
     * Path param: Account identifier
     */
    account_id: string;
    /**
     * Body param:
     */
    activated?: boolean;
    /**
     * Body param:
     */
    interrupt_window_duration_hours?: number;
    /**
     * Body param:
     */
    interrupt_window_hour_of_day?: number;
    /**
     * Body param:
     */
    notes?: string;
    /**
     * Body param:
     */
    timezone?: string;
}
export interface ConnectorGetParams {
    /**
     * Account identifier
     */
    account_id: string;
}
export declare namespace Connectors {
    export import ConnectorUpdateResponse = ConnectorsAPI.ConnectorUpdateResponse;
    export import ConnectorListResponse = ConnectorsAPI.ConnectorListResponse;
    export import ConnectorEditResponse = ConnectorsAPI.ConnectorEditResponse;
    export import ConnectorGetResponse = ConnectorsAPI.ConnectorGetResponse;
    export import ConnectorListResponsesSinglePage = ConnectorsAPI.ConnectorListResponsesSinglePage;
    export import ConnectorUpdateParams = ConnectorsAPI.ConnectorUpdateParams;
    export import ConnectorListParams = ConnectorsAPI.ConnectorListParams;
    export import ConnectorEditParams = ConnectorsAPI.ConnectorEditParams;
    export import ConnectorGetParams = ConnectorsAPI.ConnectorGetParams;
}
//# sourceMappingURL=connectors.d.ts.map