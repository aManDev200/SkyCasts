import * as Core from "../../../../../core.js";
import { APIResource } from "../../../../../resource.js";
import * as EntriesAPI from "./entries.js";
export declare class Entries extends APIResource {
    /**
     * Create IPFS Universal Path Gateway Content List Entry
     */
    create(zoneIdentifier: string, identifier: string, body: EntryCreateParams, options?: Core.RequestOptions): Core.APIPromise<EntryCreateResponse>;
    /**
     * Edit IPFS Universal Path Gateway Content List Entry
     */
    update(zoneIdentifier: string, identifier: string, contentListEntryIdentifier: string, body: EntryUpdateParams, options?: Core.RequestOptions): Core.APIPromise<EntryUpdateResponse>;
    /**
     * List IPFS Universal Path Gateway Content List Entries
     */
    list(zoneIdentifier: string, identifier: string, options?: Core.RequestOptions): Core.APIPromise<EntryListResponse | null>;
    /**
     * Delete IPFS Universal Path Gateway Content List Entry
     */
    delete(zoneIdentifier: string, identifier: string, contentListEntryIdentifier: string, options?: Core.RequestOptions): Core.APIPromise<EntryDeleteResponse | null>;
    /**
     * IPFS Universal Path Gateway Content List Entry Details
     */
    get(zoneIdentifier: string, identifier: string, contentListEntryIdentifier: string, options?: Core.RequestOptions): Core.APIPromise<EntryGetResponse>;
}
/**
 * Content list entry to be blocked.
 */
export interface EntryCreateResponse {
    /**
     * Identifier
     */
    id?: string;
    /**
     * CID or content path of content to block.
     */
    content?: string;
    created_on?: string;
    /**
     * An optional description of the content list entry.
     */
    description?: string;
    modified_on?: string;
    /**
     * Type of content list entry to block.
     */
    type?: 'cid' | 'content_path';
}
/**
 * Content list entry to be blocked.
 */
export interface EntryUpdateResponse {
    /**
     * Identifier
     */
    id?: string;
    /**
     * CID or content path of content to block.
     */
    content?: string;
    created_on?: string;
    /**
     * An optional description of the content list entry.
     */
    description?: string;
    modified_on?: string;
    /**
     * Type of content list entry to block.
     */
    type?: 'cid' | 'content_path';
}
export interface EntryListResponse {
    /**
     * Content list entries.
     */
    entries?: Array<EntryListResponse.Entry>;
}
export declare namespace EntryListResponse {
    /**
     * Content list entry to be blocked.
     */
    interface Entry {
        /**
         * Identifier
         */
        id?: string;
        /**
         * CID or content path of content to block.
         */
        content?: string;
        created_on?: string;
        /**
         * An optional description of the content list entry.
         */
        description?: string;
        modified_on?: string;
        /**
         * Type of content list entry to block.
         */
        type?: 'cid' | 'content_path';
    }
}
export interface EntryDeleteResponse {
    /**
     * Identifier
     */
    id: string;
}
/**
 * Content list entry to be blocked.
 */
export interface EntryGetResponse {
    /**
     * Identifier
     */
    id?: string;
    /**
     * CID or content path of content to block.
     */
    content?: string;
    created_on?: string;
    /**
     * An optional description of the content list entry.
     */
    description?: string;
    modified_on?: string;
    /**
     * Type of content list entry to block.
     */
    type?: 'cid' | 'content_path';
}
export interface EntryCreateParams {
    /**
     * CID or content path of content to block.
     */
    content: string;
    /**
     * Type of content list entry to block.
     */
    type: 'cid' | 'content_path';
    /**
     * An optional description of the content list entry.
     */
    description?: string;
}
export interface EntryUpdateParams {
    /**
     * CID or content path of content to block.
     */
    content: string;
    /**
     * Type of content list entry to block.
     */
    type: 'cid' | 'content_path';
    /**
     * An optional description of the content list entry.
     */
    description?: string;
}
export declare namespace Entries {
    export import EntryCreateResponse = EntriesAPI.EntryCreateResponse;
    export import EntryUpdateResponse = EntriesAPI.EntryUpdateResponse;
    export import EntryListResponse = EntriesAPI.EntryListResponse;
    export import EntryDeleteResponse = EntriesAPI.EntryDeleteResponse;
    export import EntryGetResponse = EntriesAPI.EntryGetResponse;
    export import EntryCreateParams = EntriesAPI.EntryCreateParams;
    export import EntryUpdateParams = EntriesAPI.EntryUpdateParams;
}
//# sourceMappingURL=entries.d.ts.map