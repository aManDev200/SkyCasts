import * as Core from "../../core.js";
import { APIResource } from "../../resource.js";
import * as IPsAPI from "./ips.js";
export declare class IPs extends APIResource {
    /**
     * Get IP Overview
     */
    get(params: IPGetParams, options?: Core.RequestOptions): Core.APIPromise<IPGetResponse | null>;
}
export interface IP {
    /**
     * Specifies a reference to the autonomous systems (AS) that the IP address belongs
     * to.
     */
    belongs_to_ref?: IP.BelongsToRef;
    ip?: string | string;
    risk_types?: Array<unknown>;
}
export declare namespace IP {
    /**
     * Specifies a reference to the autonomous systems (AS) that the IP address belongs
     * to.
     */
    interface BelongsToRef {
        id?: string;
        country?: string;
        description?: string;
        /**
         * Infrastructure type of this ASN.
         */
        type?: 'hosting_provider' | 'isp' | 'organization';
        value?: string;
    }
}
export type IPGetResponse = Array<IP>;
export interface IPGetParams {
    /**
     * Path param: Identifier
     */
    account_id: string;
    /**
     * Query param:
     */
    ipv4?: string;
    /**
     * Query param:
     */
    ipv6?: string;
}
export declare namespace IPs {
    export import IP = IPsAPI.IP;
    export import IPGetResponse = IPsAPI.IPGetResponse;
    export import IPGetParams = IPsAPI.IPGetParams;
}
//# sourceMappingURL=ips.d.ts.map