"use strict";
// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Intel = void 0;
const resource_1 = require("../../resource.js");
const DNSAPI = __importStar(require("./dns.js"));
const DomainHistoryAPI = __importStar(require("./domain-history.js"));
const IPListsAPI = __importStar(require("./ip-lists.js"));
const IPsAPI = __importStar(require("./ips.js"));
const MiscategorizationsAPI = __importStar(require("./miscategorizations.js"));
const SinkholesAPI = __importStar(require("./sinkholes.js"));
const WhoisAPI = __importStar(require("./whois.js"));
const ASNAPI = __importStar(require("./asn/asn.js"));
const AttackSurfaceReportAPI = __importStar(require("./attack-surface-report/attack-surface-report.js"));
const DomainsAPI = __importStar(require("./domains/domains.js"));
const IndicatorFeedsAPI = __importStar(require("./indicator-feeds/indicator-feeds.js"));
class Intel extends resource_1.APIResource {
    constructor() {
        super(...arguments);
        this.asn = new ASNAPI.ASN(this._client);
        this.dns = new DNSAPI.DNS(this._client);
        this.domains = new DomainsAPI.Domains(this._client);
        this.domainHistory = new DomainHistoryAPI.DomainHistoryResource(this._client);
        this.ips = new IPsAPI.IPs(this._client);
        this.ipLists = new IPListsAPI.IPLists(this._client);
        this.miscategorizations = new MiscategorizationsAPI.Miscategorizations(this._client);
        this.whois = new WhoisAPI.Whois(this._client);
        this.indicatorFeeds = new IndicatorFeedsAPI.IndicatorFeeds(this._client);
        this.sinkholes = new SinkholesAPI.Sinkholes(this._client);
        this.attackSurfaceReport = new AttackSurfaceReportAPI.AttackSurfaceReport(this._client);
    }
}
exports.Intel = Intel;
(function (Intel) {
    Intel.ASN = ASNAPI.ASN;
    Intel.DNS = DNSAPI.DNS;
    Intel.DNSListResponsesV4PagePagination = DNSAPI.DNSListResponsesV4PagePagination;
    Intel.Domains = DomainsAPI.Domains;
    Intel.DomainHistoryResource = DomainHistoryAPI.DomainHistoryResource;
    Intel.IPs = IPsAPI.IPs;
    Intel.IPLists = IPListsAPI.IPLists;
    Intel.Miscategorizations = MiscategorizationsAPI.Miscategorizations;
    Intel.Whois = WhoisAPI.Whois;
    Intel.IndicatorFeeds = IndicatorFeedsAPI.IndicatorFeeds;
    Intel.IndicatorFeedListResponsesSinglePage = IndicatorFeedsAPI.IndicatorFeedListResponsesSinglePage;
    Intel.Sinkholes = SinkholesAPI.Sinkholes;
    Intel.SinkholesSinglePage = SinkholesAPI.SinkholesSinglePage;
    Intel.AttackSurfaceReport = AttackSurfaceReportAPI.AttackSurfaceReport;
})(Intel = exports.Intel || (exports.Intel = {}));
//# sourceMappingURL=intel.js.map