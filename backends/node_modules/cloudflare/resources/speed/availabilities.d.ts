import * as Core from "../../core.js";
import { APIResource } from "../../resource.js";
import * as AvailabilitiesAPI from "./availabilities.js";
import * as SpeedAPI from "./speed.js";
export declare class Availabilities extends APIResource {
    /**
     * Retrieves quota for all plans, as well as the current zone quota.
     */
    list(params: AvailabilityListParams, options?: Core.RequestOptions): Core.APIPromise<Availability>;
}
export interface Availability {
    quota?: Availability.Quota;
    regions?: Array<SpeedAPI.LabeledRegion>;
    regionsPerPlan?: unknown;
}
export declare namespace Availability {
    interface Quota {
        /**
         * Cloudflare plan.
         */
        plan?: string;
        /**
         * The number of tests available per plan.
         */
        quotasPerPlan?: Record<string, number>;
        /**
         * The number of remaining schedules available.
         */
        remainingSchedules?: number;
        /**
         * The number of remaining tests available.
         */
        remainingTests?: number;
        /**
         * The number of schedules available per plan.
         */
        scheduleQuotasPerPlan?: Record<string, number>;
    }
}
export interface AvailabilityListParams {
    /**
     * Identifier
     */
    zone_id: string;
}
export declare namespace Availabilities {
    export import Availability = AvailabilitiesAPI.Availability;
    export import AvailabilityListParams = AvailabilitiesAPI.AvailabilityListParams;
}
//# sourceMappingURL=availabilities.d.ts.map