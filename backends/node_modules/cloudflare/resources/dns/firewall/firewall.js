"use strict";
// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FirewallsV4PagePaginationArray = exports.FirewallResource = void 0;
const resource_1 = require("../../../resource.js");
const FirewallAPI = __importStar(require("./firewall.js"));
const AnalyticsAPI = __importStar(require("./analytics/analytics.js"));
const pagination_1 = require("../../../pagination.js");
class FirewallResource extends resource_1.APIResource {
    constructor() {
        super(...arguments);
        this.analytics = new AnalyticsAPI.Analytics(this._client);
    }
    /**
     * Create a configured DNS Firewall Cluster.
     */
    create(params, options) {
        const { account_id, ...body } = params;
        return this._client.post(`/accounts/${account_id}/dns_firewall`, { body, ...options })._thenUnwrap((obj) => obj.result);
    }
    /**
     * List configured DNS Firewall clusters for an account.
     */
    list(params, options) {
        const { account_id, ...query } = params;
        return this._client.getAPIList(`/accounts/${account_id}/dns_firewall`, FirewallsV4PagePaginationArray, {
            query,
            ...options,
        });
    }
    /**
     * Delete a configured DNS Firewall Cluster.
     */
    delete(dnsFirewallId, params, options) {
        const { account_id } = params;
        return this._client.delete(`/accounts/${account_id}/dns_firewall/${dnsFirewallId}`, options)._thenUnwrap((obj) => obj.result);
    }
    /**
     * Modify a DNS Firewall Cluster configuration.
     */
    edit(dnsFirewallId, params, options) {
        const { account_id, ...body } = params;
        return this._client.patch(`/accounts/${account_id}/dns_firewall/${dnsFirewallId}`, {
            body,
            ...options,
        })._thenUnwrap((obj) => obj.result);
    }
    /**
     * Show a single configured DNS Firewall cluster for an account.
     */
    get(dnsFirewallId, params, options) {
        const { account_id } = params;
        return this._client.get(`/accounts/${account_id}/dns_firewall/${dnsFirewallId}`, options)._thenUnwrap((obj) => obj.result);
    }
}
exports.FirewallResource = FirewallResource;
class FirewallsV4PagePaginationArray extends pagination_1.V4PagePaginationArray {
}
exports.FirewallsV4PagePaginationArray = FirewallsV4PagePaginationArray;
(function (FirewallResource) {
    FirewallResource.FirewallsV4PagePaginationArray = FirewallAPI.FirewallsV4PagePaginationArray;
    FirewallResource.Analytics = AnalyticsAPI.Analytics;
})(FirewallResource = exports.FirewallResource || (exports.FirewallResource = {}));
//# sourceMappingURL=firewall.js.map