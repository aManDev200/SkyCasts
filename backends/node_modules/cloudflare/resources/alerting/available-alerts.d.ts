import * as Core from "../../core.js";
import { APIResource } from "../../resource.js";
import * as AvailableAlertsAPI from "./available-alerts.js";
export declare class AvailableAlerts extends APIResource {
    /**
     * Gets a list of all alert types for which an account is eligible.
     */
    list(params: AvailableAlertListParams, options?: Core.RequestOptions): Core.APIPromise<AvailableAlertListResponse>;
}
export type AvailableAlertListResponse = Record<string, Array<AvailableAlertListResponse.UnnamedSchemaWithMapParent1>>;
export declare namespace AvailableAlertListResponse {
    interface UnnamedSchemaWithMapParent1 {
        /**
         * Describes the alert type.
         */
        description?: string;
        /**
         * Alert type name.
         */
        display_name?: string;
        /**
         * Format of additional configuration options (filters) for the alert type. Data
         * type of filters during policy creation: Array of strings.
         */
        filter_options?: Array<unknown>;
        /**
         * Use this value when creating and updating a notification policy.
         */
        type?: string;
    }
}
export interface AvailableAlertListParams {
    /**
     * The account id
     */
    account_id: string;
}
export declare namespace AvailableAlerts {
    export import AvailableAlertListResponse = AvailableAlertsAPI.AvailableAlertListResponse;
    export import AvailableAlertListParams = AvailableAlertsAPI.AvailableAlertListParams;
}
//# sourceMappingURL=available-alerts.d.ts.map