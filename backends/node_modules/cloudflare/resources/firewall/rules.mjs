// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { APIResource } from "../../resource.mjs";
import { isRequestOptions } from "../../core.mjs";
import * as RulesAPI from "./rules.mjs";
import { V4PagePaginationArray } from "../../pagination.mjs";
export class Rules extends APIResource {
    /**
     * Create one or more firewall rules.
     *
     * @deprecated The Firewall Rules API is deprecated in favour of using the Ruleset Engine. See https://developers.cloudflare.com/fundamentals/api/reference/deprecations/#firewall-rules-api-and-filters-api for full details.
     */
    create(zoneIdentifier, body, options) {
        return this._client.post(`/zones/${zoneIdentifier}/firewall/rules`, { body, ...options })._thenUnwrap((obj) => obj.result);
    }
    /**
     * Updates an existing firewall rule.
     *
     * @deprecated The Firewall Rules API is deprecated in favour of using the Ruleset Engine. See https://developers.cloudflare.com/fundamentals/api/reference/deprecations/#firewall-rules-api-and-filters-api for full details.
     */
    update(zoneIdentifier, id, body, options) {
        return this._client.put(`/zones/${zoneIdentifier}/firewall/rules/${id}`, {
            body,
            ...options,
        })._thenUnwrap((obj) => obj.result);
    }
    list(zoneIdentifier, query = {}, options) {
        if (isRequestOptions(query)) {
            return this.list(zoneIdentifier, {}, query);
        }
        return this._client.getAPIList(`/zones/${zoneIdentifier}/firewall/rules`, FirewallRulesV4PagePaginationArray, { query, ...options });
    }
    /**
     * Deletes an existing firewall rule.
     *
     * @deprecated The Firewall Rules API is deprecated in favour of using the Ruleset Engine. See https://developers.cloudflare.com/fundamentals/api/reference/deprecations/#firewall-rules-api-and-filters-api for full details.
     */
    delete(zoneIdentifier, id, options) {
        return this._client.delete(`/zones/${zoneIdentifier}/firewall/rules/${id}`, options)._thenUnwrap((obj) => obj.result);
    }
    /**
     * Updates the priority of an existing firewall rule.
     *
     * @deprecated The Firewall Rules API is deprecated in favour of using the Ruleset Engine. See https://developers.cloudflare.com/fundamentals/api/reference/deprecations/#firewall-rules-api-and-filters-api for full details.
     */
    edit(zoneIdentifier, id, body, options) {
        return this._client.patch(`/zones/${zoneIdentifier}/firewall/rules/${id}`, {
            body,
            ...options,
        })._thenUnwrap((obj) => obj.result);
    }
    /**
     * Fetches the details of a firewall rule.
     *
     * @deprecated The Firewall Rules API is deprecated in favour of using the Ruleset Engine. See https://developers.cloudflare.com/fundamentals/api/reference/deprecations/#firewall-rules-api-and-filters-api for full details.
     */
    get(zoneIdentifier, params, options) {
        const { path_id, query_id, ...query } = params;
        return this._client.get(`/zones/${zoneIdentifier}/firewall/rules/${path_id}`, {
            query: { id: query_id, ...query },
            ...options,
        })._thenUnwrap((obj) => obj.result);
    }
}
export class FirewallRulesV4PagePaginationArray extends V4PagePaginationArray {
}
(function (Rules) {
    Rules.FirewallRulesV4PagePaginationArray = RulesAPI.FirewallRulesV4PagePaginationArray;
})(Rules || (Rules = {}));
//# sourceMappingURL=rules.mjs.map