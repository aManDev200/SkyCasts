// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { APIResource } from "../../../resource.mjs";
import * as UserSchemasAPI from "./user-schemas.mjs";
import * as OperationsAPI from "./operations.mjs";
import { multipartFormRequestOptions } from "../../../core.mjs";
import { SinglePage } from "../../../pagination.mjs";
export class UserSchemas extends APIResource {
    constructor() {
        super(...arguments);
        this.operations = new OperationsAPI.Operations(this._client);
    }
    /**
     * Upload a schema to a zone
     */
    create(params, options) {
        const { zone_id, ...body } = params;
        return this._client.post(`/zones/${zone_id}/api_gateway/user_schemas`, multipartFormRequestOptions({ body, ...options }))._thenUnwrap((obj) => obj.result);
    }
    /**
     * Retrieve information about all schemas on a zone
     */
    list(params, options) {
        const { zone_id, ...query } = params;
        return this._client.getAPIList(`/zones/${zone_id}/api_gateway/user_schemas`, PublicSchemasSinglePage, {
            query,
            ...options,
        });
    }
    /**
     * Delete a schema
     */
    delete(schemaId, params, options) {
        const { zone_id } = params;
        return this._client.delete(`/zones/${zone_id}/api_gateway/user_schemas/${schemaId}`, options)._thenUnwrap((obj) => obj.result);
    }
    /**
     * Enable validation for a schema
     */
    edit(schemaId, params, options) {
        const { zone_id, ...body } = params;
        return this._client.patch(`/zones/${zone_id}/api_gateway/user_schemas/${schemaId}`, {
            body,
            ...options,
        })._thenUnwrap((obj) => obj.result);
    }
    /**
     * Retrieve information about a specific schema on a zone
     */
    get(schemaId, params, options) {
        const { zone_id, ...query } = params;
        return this._client.get(`/zones/${zone_id}/api_gateway/user_schemas/${schemaId}`, {
            query,
            ...options,
        })._thenUnwrap((obj) => obj.result);
    }
}
export class PublicSchemasSinglePage extends SinglePage {
}
(function (UserSchemas) {
    UserSchemas.PublicSchemasSinglePage = UserSchemasAPI.PublicSchemasSinglePage;
    UserSchemas.Operations = OperationsAPI.Operations;
    UserSchemas.OperationListResponsesSinglePage = OperationsAPI.OperationListResponsesSinglePage;
})(UserSchemas || (UserSchemas = {}));
//# sourceMappingURL=user-schemas.mjs.map