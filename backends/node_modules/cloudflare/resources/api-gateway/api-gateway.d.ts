import { APIResource } from "../../resource.js";
import * as ConfigurationsAPI from "./configurations.js";
import * as SchemasAPI from "./schemas.js";
import * as DiscoveryAPI from "./discovery/discovery.js";
import * as OperationsAPI from "./operations/operations.js";
import * as SettingsAPI from "./settings/settings.js";
import * as UserSchemasAPI from "./user-schemas/user-schemas.js";
export declare class APIGateway extends APIResource {
    configurations: ConfigurationsAPI.Configurations;
    discovery: DiscoveryAPI.Discovery;
    operations: OperationsAPI.Operations;
    schemas: SchemasAPI.Schemas;
    settings: SettingsAPI.Settings;
    userSchemas: UserSchemasAPI.UserSchemas;
}
export declare namespace APIGateway {
    export import Configurations = ConfigurationsAPI.Configurations;
    export import Configuration = ConfigurationsAPI.Configuration;
    export import ConfigurationUpdateResponse = ConfigurationsAPI.ConfigurationUpdateResponse;
    export import ConfigurationUpdateParams = ConfigurationsAPI.ConfigurationUpdateParams;
    export import ConfigurationGetParams = ConfigurationsAPI.ConfigurationGetParams;
    export import Discovery = DiscoveryAPI.Discovery;
    export import DiscoveryOperation = DiscoveryAPI.DiscoveryOperation;
    export import DiscoveryGetResponse = DiscoveryAPI.DiscoveryGetResponse;
    export import DiscoveryGetParams = DiscoveryAPI.DiscoveryGetParams;
    export import Operations = OperationsAPI.Operations;
    export import APIShield = OperationsAPI.APIShield;
    export import OperationCreateResponse = OperationsAPI.OperationCreateResponse;
    export import OperationDeleteResponse = OperationsAPI.OperationDeleteResponse;
    export import APIShieldsSinglePage = OperationsAPI.APIShieldsSinglePage;
    export import OperationCreateParams = OperationsAPI.OperationCreateParams;
    export import OperationListParams = OperationsAPI.OperationListParams;
    export import OperationDeleteParams = OperationsAPI.OperationDeleteParams;
    export import OperationGetParams = OperationsAPI.OperationGetParams;
    export import Schemas = SchemasAPI.Schemas;
    export import SchemaListResponse = SchemasAPI.SchemaListResponse;
    export import SchemaListParams = SchemasAPI.SchemaListParams;
    export import Settings = SettingsAPI.Settings;
    export import UserSchemas = UserSchemasAPI.UserSchemas;
    export import Message = UserSchemasAPI.Message;
    export import PublicSchema = UserSchemasAPI.PublicSchema;
    export import SchemaUpload = UserSchemasAPI.SchemaUpload;
    export import UserSchemaDeleteResponse = UserSchemasAPI.UserSchemaDeleteResponse;
    export import PublicSchemasSinglePage = UserSchemasAPI.PublicSchemasSinglePage;
    export import UserSchemaCreateParams = UserSchemasAPI.UserSchemaCreateParams;
    export import UserSchemaListParams = UserSchemasAPI.UserSchemaListParams;
    export import UserSchemaDeleteParams = UserSchemasAPI.UserSchemaDeleteParams;
    export import UserSchemaEditParams = UserSchemasAPI.UserSchemaEditParams;
    export import UserSchemaGetParams = UserSchemasAPI.UserSchemaGetParams;
}
//# sourceMappingURL=api-gateway.d.ts.map