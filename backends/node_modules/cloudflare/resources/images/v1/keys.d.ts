import * as Core from "../../../core.js";
import { APIResource } from "../../../resource.js";
import * as KeysAPI from "./keys.js";
export declare class Keys extends APIResource {
    /**
     * Create a new signing key with specified name. Returns all keys available.
     */
    update(signingKeyName: string, params: KeyUpdateParams, options?: Core.RequestOptions): Core.APIPromise<KeyUpdateResponse>;
    /**
     * Lists your signing keys. These can be found on your Cloudflare Images dashboard.
     */
    list(params: KeyListParams, options?: Core.RequestOptions): Core.APIPromise<KeyListResponse>;
    /**
     * Delete signing key with specified name. Returns all keys available. When last
     * key is removed, a new default signing key will be generated.
     */
    delete(signingKeyName: string, params: KeyDeleteParams, options?: Core.RequestOptions): Core.APIPromise<KeyDeleteResponse>;
}
export interface Key {
    /**
     * Key name.
     */
    name?: string;
    /**
     * Key value.
     */
    value?: string;
}
export interface KeyUpdateResponse {
    keys?: Array<Key>;
}
export interface KeyListResponse {
    keys?: Array<Key>;
}
export interface KeyDeleteResponse {
    keys?: Array<Key>;
}
export interface KeyUpdateParams {
    /**
     * Account identifier tag.
     */
    account_id: string;
}
export interface KeyListParams {
    /**
     * Account identifier tag.
     */
    account_id: string;
}
export interface KeyDeleteParams {
    /**
     * Account identifier tag.
     */
    account_id: string;
}
export declare namespace Keys {
    export import Key = KeysAPI.Key;
    export import KeyUpdateResponse = KeysAPI.KeyUpdateResponse;
    export import KeyListResponse = KeysAPI.KeyListResponse;
    export import KeyDeleteResponse = KeysAPI.KeyDeleteResponse;
    export import KeyUpdateParams = KeysAPI.KeyUpdateParams;
    export import KeyListParams = KeysAPI.KeyListParams;
    export import KeyDeleteParams = KeysAPI.KeyDeleteParams;
}
//# sourceMappingURL=keys.d.ts.map