import * as Core from "../../../core.js";
import { APIResource } from "../../../resource.js";
import * as V2API from "./v2.js";
import * as V1API from "../v1/v1.js";
import * as DirectUploadsAPI from "./direct-uploads.js";
export declare class V2 extends APIResource {
    directUploads: DirectUploadsAPI.DirectUploads;
    /**
     * List up to 10000 images with one request. Use the optional parameters below to
     * get a specific range of images. Endpoint returns continuation_token if more
     * images are present.
     */
    list(params: V2ListParams, options?: Core.RequestOptions): Core.APIPromise<V2ListResponse>;
}
export interface V2ListResponse {
    /**
     * Continuation token to fetch next page. Passed as a query param when requesting
     * List V2 api endpoint.
     */
    continuation_token?: string | null;
    images?: Array<V1API.Image>;
}
export interface V2ListParams {
    /**
     * Path param: Account identifier tag.
     */
    account_id: string;
    /**
     * Query param: Continuation token for a next page. List images V2 returns
     * continuation_token
     */
    continuation_token?: string | null;
    /**
     * Query param: Number of items per page.
     */
    per_page?: number;
    /**
     * Query param: Sorting order by upload time.
     */
    sort_order?: 'asc' | 'desc';
}
export declare namespace V2 {
    export import V2ListResponse = V2API.V2ListResponse;
    export import V2ListParams = V2API.V2ListParams;
    export import DirectUploads = DirectUploadsAPI.DirectUploads;
    export import DirectUploadCreateResponse = DirectUploadsAPI.DirectUploadCreateResponse;
    export import DirectUploadCreateParams = DirectUploadsAPI.DirectUploadCreateParams;
}
//# sourceMappingURL=v2.d.ts.map