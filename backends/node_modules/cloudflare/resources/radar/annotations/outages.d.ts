import * as Core from "../../../core.js";
import { APIResource } from "../../../resource.js";
import * as OutagesAPI from "./outages.js";
export declare class Outages extends APIResource {
    /**
     * Get latest Internet outages and anomalies.
     */
    get(query?: OutageGetParams, options?: Core.RequestOptions): Core.APIPromise<OutageGetResponse>;
    get(options?: Core.RequestOptions): Core.APIPromise<OutageGetResponse>;
    /**
     * Get the number of outages for locations.
     */
    locations(query?: OutageLocationsParams, options?: Core.RequestOptions): Core.APIPromise<OutageLocationsResponse>;
    locations(options?: Core.RequestOptions): Core.APIPromise<OutageLocationsResponse>;
}
export interface OutageGetResponse {
    annotations: Array<OutageGetResponse.Annotation>;
}
export declare namespace OutageGetResponse {
    interface Annotation {
        id: string;
        asns: Array<number>;
        asnsDetails: Array<Annotation.ASNsDetail>;
        dataSource: string;
        eventType: string;
        locations: Array<string>;
        locationsDetails: Array<Annotation.LocationsDetail>;
        outage: Annotation.Outage;
        startDate: string;
        description?: string;
        endDate?: string;
        linkedUrl?: string;
        scope?: string;
    }
    namespace Annotation {
        interface ASNsDetail {
            asn: string;
            name: string;
            locations?: ASNsDetail.Locations;
        }
        namespace ASNsDetail {
            interface Locations {
                code: string;
                name: string;
            }
        }
        interface LocationsDetail {
            code: string;
            name: string;
        }
        interface Outage {
            outageCause: string;
            outageType: string;
        }
    }
}
export interface OutageLocationsResponse {
    annotations: Array<OutageLocationsResponse.Annotation>;
}
export declare namespace OutageLocationsResponse {
    interface Annotation {
        clientCountryAlpha2: string;
        clientCountryName: string;
        value: string;
    }
}
export interface OutageGetParams {
    /**
     * Single ASN as integer.
     */
    asn?: number;
    /**
     * End of the date range (inclusive).
     */
    dateEnd?: string;
    /**
     * Shorthand date ranges for the last X days - use when you don't need specific
     * start and end dates.
     */
    dateRange?: '1d' | '2d' | '7d' | '14d' | '28d' | '12w' | '24w' | '52w' | '1dControl' | '2dControl' | '7dControl' | '14dControl' | '28dControl' | '12wControl' | '24wControl';
    /**
     * Start of the date range (inclusive).
     */
    dateStart?: string;
    /**
     * Format results are returned in.
     */
    format?: 'JSON' | 'CSV';
    /**
     * Limit the number of objects in the response.
     */
    limit?: number;
    /**
     * Location Alpha2 code.
     */
    location?: string;
    /**
     * Number of objects to skip before grabbing results.
     */
    offset?: number;
}
export interface OutageLocationsParams {
    /**
     * End of the date range (inclusive).
     */
    dateEnd?: string;
    /**
     * Shorthand date ranges for the last X days - use when you don't need specific
     * start and end dates.
     */
    dateRange?: '1d' | '2d' | '7d' | '14d' | '28d' | '12w' | '24w' | '52w' | '1dControl' | '2dControl' | '7dControl' | '14dControl' | '28dControl' | '12wControl' | '24wControl';
    /**
     * Start of the date range (inclusive).
     */
    dateStart?: string;
    /**
     * Format results are returned in.
     */
    format?: 'JSON' | 'CSV';
    /**
     * Limit the number of objects in the response.
     */
    limit?: number;
}
export declare namespace Outages {
    export import OutageGetResponse = OutagesAPI.OutageGetResponse;
    export import OutageLocationsResponse = OutagesAPI.OutageLocationsResponse;
    export import OutageGetParams = OutagesAPI.OutageGetParams;
    export import OutageLocationsParams = OutagesAPI.OutageLocationsParams;
}
//# sourceMappingURL=outages.d.ts.map