import * as Core from "../../../../core.js";
import { APIResource } from "../../../../resource.js";
import * as TopAPI from "./top.js";
import * as AsesAPI from "./ases.js";
export declare class Top extends APIResource {
    ases: AsesAPI.Ases;
    /**
     * Get the top network prefixes by BGP updates. Values are a percentage out of the
     * total BGP updates.
     */
    prefixes(query?: TopPrefixesParams, options?: Core.RequestOptions): Core.APIPromise<TopPrefixesResponse>;
    prefixes(options?: Core.RequestOptions): Core.APIPromise<TopPrefixesResponse>;
}
export interface TopPrefixesResponse {
    meta: TopPrefixesResponse.Meta;
    top_0: Array<TopPrefixesResponse.Top0>;
}
export declare namespace TopPrefixesResponse {
    interface Meta {
        dateRange: Array<Meta.DateRange>;
    }
    namespace Meta {
        interface DateRange {
            /**
             * Adjusted end of date range.
             */
            endTime: string;
            /**
             * Adjusted start of date range.
             */
            startTime: string;
        }
    }
    interface Top0 {
        prefix: string;
        value: string;
    }
}
export interface TopPrefixesParams {
    /**
     * Array of comma separated list of ASNs, start with `-` to exclude from results.
     * For example, `-174, 3356` excludes results from AS174, but includes results from
     * AS3356.
     */
    asn?: Array<string>;
    /**
     * End of the date range (inclusive).
     */
    dateEnd?: Array<string>;
    /**
     * For example, use `7d` and `7dControl` to compare this week with the previous
     * week. Use this parameter or set specific start and end dates (`dateStart` and
     * `dateEnd` parameters).
     */
    dateRange?: Array<'1d' | '2d' | '7d' | '14d' | '28d' | '12w' | '24w' | '52w' | '1dControl' | '2dControl' | '7dControl' | '14dControl' | '28dControl' | '12wControl' | '24wControl'>;
    /**
     * Array of datetimes to filter the start of a series.
     */
    dateStart?: Array<string>;
    /**
     * Format results are returned in.
     */
    format?: 'JSON' | 'CSV';
    /**
     * Limit the number of objects in the response.
     */
    limit?: number;
    /**
     * Array of names that will be used to name the series in responses.
     */
    name?: Array<string>;
    /**
     * Array of BGP update types.
     */
    updateType?: Array<'ANNOUNCEMENT' | 'WITHDRAWAL'>;
}
export declare namespace Top {
    export import TopPrefixesResponse = TopAPI.TopPrefixesResponse;
    export import TopPrefixesParams = TopAPI.TopPrefixesParams;
    export import Ases = AsesAPI.Ases;
    export import AseGetResponse = AsesAPI.AseGetResponse;
    export import AsePrefixesResponse = AsesAPI.AsePrefixesResponse;
    export import AseGetParams = AsesAPI.AseGetParams;
    export import AsePrefixesParams = AsesAPI.AsePrefixesParams;
}
//# sourceMappingURL=top.d.ts.map