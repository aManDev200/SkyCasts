import * as Core from "../../../core.js";
import { APIResource } from "../../../resource.js";
import * as IPsAPI from "./ips.js";
export declare class IPs extends APIResource {
    /**
     * Gets time-series data for the announced IP space count, represented as the
     * number of IPv4 /24s and IPv6 /48s, for a given ASN.
     */
    timeseries(query?: IPTimeseriesParams, options?: Core.RequestOptions): Core.APIPromise<IPTimeseriesResponse>;
    timeseries(options?: Core.RequestOptions): Core.APIPromise<IPTimeseriesResponse>;
}
export interface IPTimeseriesResponse {
    meta: IPTimeseriesResponse.Meta;
    serie_174: IPTimeseriesResponse.Serie174;
    serie_cn: IPTimeseriesResponse.SerieCn;
}
export declare namespace IPTimeseriesResponse {
    interface Meta {
        dateRange: Array<Meta.DateRange>;
    }
    namespace Meta {
        interface DateRange {
            /**
             * Adjusted end of date range.
             */
            endTime: string;
            /**
             * Adjusted start of date range.
             */
            startTime: string;
        }
    }
    interface Serie174 {
        ipv4: Array<string>;
        ipv6: Array<string>;
        timestamps: Array<string>;
    }
    interface SerieCn {
        ipv4: Array<string>;
        ipv6: Array<string>;
        timestamps: Array<string>;
    }
}
export interface IPTimeseriesParams {
    /**
     * Comma separated list of ASNs.
     */
    asn?: string;
    /**
     * End of the date range (inclusive).
     */
    dateEnd?: string;
    /**
     * Shorthand date ranges for the last X days - use when you don't need specific
     * start and end dates.
     */
    dateRange?: '1d' | '2d' | '7d' | '14d' | '28d' | '12w' | '24w' | '52w' | '1dControl' | '2dControl' | '7dControl' | '14dControl' | '28dControl' | '12wControl' | '24wControl';
    /**
     * Start of the date range (inclusive).
     */
    dateStart?: string;
    /**
     * Format results are returned in.
     */
    format?: 'JSON' | 'CSV';
    /**
     * Include data delay meta information
     */
    includeDelay?: boolean;
    /**
     * Comma separated list of locations.
     */
    location?: string;
    /**
     * Array of names that will be used to name the series in responses.
     */
    name?: Array<string>;
}
export declare namespace IPs {
    export import IPTimeseriesResponse = IPsAPI.IPTimeseriesResponse;
    export import IPTimeseriesParams = IPsAPI.IPTimeseriesParams;
}
//# sourceMappingURL=ips.d.ts.map